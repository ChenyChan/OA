package user.action;

import java.util.List;
import java.util.Map;


import javax.annotation.Resource;
import javax.servlet.http.Cookie;
import javax.servlet.http.HttpServletRequest;

import org.apache.struts2.StrutsStatics;
import org.springframework.stereotype.Controller;


import pojo.TMenu;
import pojo.TUser;
import user.service.MenuService;
import user.service.UserService;

import com.opensymphony.xwork2.ActionContext;
import com.opensymphony.xwork2.ModelDriven;



public class LoginAction extends BaseAction implements ModelDriven<TUser>{
	
	private UserService userService;
	private MenuService menuService;
	private List<TMenu> menuList;
	private TUser user = new TUser();
	private String code;
	public String checklogin() throws Exception{
		Map session = ActionContext.getContext().getSession();
		Integer logincount=(Integer) session.get("logincount");
		if(logincount==null){
			logincount=0;
		}else{
			logincount=(Integer) session.get("logincount");
		}
		String servletrand=(String) getSession().getAttribute("rand");
		//验证码
		if (code!=null&&!"".equals(code)&&code.equals(servletrand)) {	
			//用户存在
			boolean exist = userService.isExit(user);
			if(exist){
				//没有冻结
				TUser nowUser=userService.findByUsername(user.getUsername());
				if(nowUser.getFreeze()==0){
					getSession().setAttribute("user", nowUser);		
					Cookie cookie=new Cookie("username", nowUser.getUsername());
					cookie.setMaxAge(60*60*24*360);
					response.addCookie(cookie);	
					menuList = menuService.seach();
					System.out.println(menuList);
					getSession().setAttribute("menuList", menuList);
					this.message="登录成功,正在转向主页";
					this.addDefaultURL("", "index");

					return SUCCESS;
				}else{
					//被冻结  1
					this.message="账号被冻结，请与管理员联系";
					this.addDefaultURL("", "loginjsp");
					return "login";
				}
			}else{
				//用户名或密码错误
				this.message="用户名或密码错误";
				this.addDefaultURL("", "loginjsp");
				return "login";
			}
		}else{
			//验证码错误
			this.message="验证码错误";
			this.addDefaultURL("", "loginjsp");
			return "login";
		}
	}
	
	public String quit(){
		getSession().removeAttribute("user");
		this.message="退出成功，正在转向登录页";
		this.addDefaultURL("", "menulist!view");
		return SUCCESS;
	} 


	public String getCode() {
		return code;
	}


	public void setCode(String code) {
		this.code = code;
	}

	@Override
	public TUser getModel() {
		return user;
	}


	public UserService getUserService() {
		return userService;
	}

	public void setUserService(UserService userService) {
		this.userService = userService;
	}

	public MenuService getMenuService() {
		return menuService;
	}

	public void setMenuService(MenuService menuService) {
		this.menuService = menuService;
	}

	public List<TMenu> getMenuList() {
		return menuList;
	}

	public void setMenuList(List<TMenu> menuList) {
		this.menuList = menuList;
	}
	
	

}
